user root root;

events {
    use epoll;
    worker_connections  1024;
}

env QIHOO_IDC;

http {
    resolver 127.0.0.11 ipv6=off;

    variables_hash_max_size 1024;
    include       mime.types;
    default_type  text/plain;
    server_tokens off;

    #多个vhost需要调大此值
    server_names_hash_bucket_size 128;

    #如果浏览器cookie 很大调大此两个值
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;

    # 设置客户端能够上传的文件大小
    client_max_body_size 4k;

    log_format  qfe_log  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for" "$scheme" "$host"';

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for" "$scheme" "$host"';

    access_log  logs/access.log qfe_log;
    error_log  logs/error.log info;

    sendfile    on;
    tcp_nodelay on;
    tcp_nopush  on;

    keepalive_timeout  0;

    # 开启gzip压缩
    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types  text/plain text/xml text/css application/x-javascript application/xml;
    gzip_vary on;

    lua_code_cache on;
    lua_shared_dict QFECONFIG 5m;
    lua_shared_dict freqctrl_config 5m;
    lua_shared_dict prometheus_metrics 50m;
    lua_package_path your_lua_lib_paths;

    # 获取配置信息
    init_worker_by_lua_block {
        require("block/init").run();
    }

    # 请求检查
    access_by_lua_block {
        --require("block/access").run();
    }

    # 测试session cache的配置
    ssl_session_tickets off;

    # 获取session data
    ssl_session_fetch_by_lua_file <absolute_path>/qfe/lua/block/session_fetch.lua;
    ssl_session_store_by_lua_file <absolute_path>/qfe/lua/block/session_store.lua;

    include ../conf.d/*/*.conf;
}
